# This workflow will do a clean installation of node dependencies, cache/restore them run tests.
#On success it will build the docker image then push it to dockerhub

name: Node.js CI

on:
  push:
    branches: [ "Main1" ]
  pull_request:
    branches: [ "Main1" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        envkey_APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
        envkey_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        envkey_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
        envkey_EMAIL: ${{ secrets.EMAIL }}
        envkey_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        envkey_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
        envkey_MONGODB_URI: ${{ secrets.MONGODB_URI }}
        envkey_PORT: ${{ secrets.PORT }}
        envkey_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        envkey_VITE_FRONTEND_HOST: ${{ secrets.VITE_FRONTEND_HOST }}
        envkey_VITE_SERVER_HOST: ${{ secrets.VITE_SERVER_HOST }}
        file_name: .env
        fail_on_empty: true
        sort_keys: false
    - run: npm test
    - name: Deleting node_modules
      #This is deleted since we dont want to copy the node_modules into the dcoker container
      run: rm -r node_modules
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: isslolo/curio
        tags: curio-backend
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az vm run-command invoke -g CurioT7 -n CurioT7 --command-id RunShellScript --scripts "/home/azureuser/curio/deploy.sh "
    
